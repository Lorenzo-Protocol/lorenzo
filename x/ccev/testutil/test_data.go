package testutil

import (
	"encoding/json"
	"testing"

	"github.com/ethereum/go-ethereum/common"
	evmtypes "github.com/ethereum/go-ethereum/core/types"
	"github.com/stretchr/testify/require"

	"github.com/Lorenzo-Protocol/lorenzo/v3/x/ccev/types"
)

var testHeaders = `[
  {
    "hash": "5pzSSKjPxobzBo8qT8/NTMkSR0DQQla6dVQiyqvOnGo=",
    "number": 42768115,
    "receipt_root": "oVj2iQpuYg8+ljmso1u1i30v5nmoUlFHDkfuyDaNPjA="
  },
  {
    "hash": "hrYymksY4TjTZRlpSBN0GQta8po7gfsycIKbcASY2d4=",
    "number": 42768116,
    "receipt_root": "fJ+698rHJSO4J1h5H/bacUU18rXb/Yjq9f1X4YPPF7Q="
  },
  {
    "hash": "U/mYpWMaVqz/2izhMV/kbJXZt6RH7aq92myHgc0N65A=",
    "number": 42768117,
    "receipt_root": "ssyoH5lRvQD/61OFYpgG0MGr3B2cdz+h6llMi0AKGJk="
  },
  {
    "hash": "/tffHEYRQNF7S07ZQqJMFPMls1TYuVup7y2wXK1JNXQ=",
    "number": 42768118,
    "receipt_root": "eQEl5Rt87fpbS8/epeYjqlj22TiGzvMJ+k/GBA+3lps="
  },
  {
    "hash": "mRmD8fUj+wLdgmjChs9NU4CING9IrQNI47lXajutYSU=",
    "number": 42768119,
    "receipt_root": "oLjRQ8UPcH4Itw3DoJVvSZTJcHsesNTTI4cTjn30PUg="
  },
  {
    "hash": "oVNGVaqjKSwk3SFXDPKSCsQUFOT5x4TvLjkVGNcv0cY=",
    "number": 42768120,
    "receipt_root": "HOelxLHsQ8H/u7AWhRkbojcSKVK48QUOV119D0+XQ98="
  },
  {
    "hash": "vev78tC4b4tzzDHiEeR8w4nyEi4zjFBIQI74AVIpwyE=",
    "number": 42768121,
    "receipt_root": "R1pe5mrbeNQHFagpCFoSihdSNeGvoZpXGvkFIT+\nMD1g="
  },
  {
    "hash": "DAsmidyvJU+ODhrSjT4skBCp7ZMHf+1SAgdMEK9VP18=",
    "number": 42768122,
    "receipt_root": "qru8pflpPAVYpL0zU0xv0C82bVIy+lUr4vXlYYpjBrc="
  },
  {
    "hash": "7YIw2+1/P+TxeKWlo8Hz6eXn2qlCokjWXHB18PjIbHQ=",
    "number": 42768123,
    "receipt_root": "tG6vk+KUKJ075wMQcnIx8R02htdyU3uHkhwyodSOyGY="
  },
  {
    "hash": "AapiOfFbavBdm8vyJsKTSoJ6pC7LItyN/Mfy2lIKLU8=",
    "number": 42768124,
    "receipt_root": "D+KXfE4FSRLqG+FLROw/JHC8y2id21fkQT1/2JIOpA0="
  }
]`

var receiptRLP = `b9034802f903440183113d2dbf90239f89b9449ff00552ca23899ba9f814bcf7ed55bc5cdd9cef863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01a00000000000000000000000004730ddefe385300417cb5617f3adf0105aff6806a00000000000000000000000000000000000000000000000001bc16d674ec80000f89b942a45de58552f2c5e0597d1fbb8ec83f7e2ddba0df863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01a00000000000000000000000000000000000000000000000001bc16d674ec80000f8fd949adb675bc89d9ec5d829709e85562b7c99658d59f884a065199e8f9cbc273da46a3e57ea48d1ba2ced8379e8f19785847bb3bf1f712dfea00000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01b86000000000000000000000000049ff00552ca23899ba9f814bcf7ed55bc5cdd9ce0000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000001bc16d674ec80000`

var proofRLP = `f909190ab9034802f903440183113d2dbf90239f89b9449ff00552ca23899ba9f814bcf7ed55bc5cdd9cef863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01a00000000000000000000000004730ddefe385300417cb5617f3adf0105aff6806a00000000000000000000000000000000000000000000000001bc16d674ec80000f89b942a45de58552f2c5e0597d1fbb8ec83f7e2ddba0df863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01a00000000000000000000000000000000000000000000000001bc16d674ec80000f8fd949adb675bc89d9ec5d829709e85562b7c99658d59f884a065199e8f9cbc273da46a3e57ea48d1ba2ced8379e8f19785847bb3bf1f712dfea00000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01b86000000000000000000000000049ff00552ca23899ba9f814bcf7ed55bc5cdd9ce0000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000001bc16d674ec80000f905caf887ac6551456c355274383766706253382f657065596a716c6a32325469477a764d4a2b6b2f4742412b336c70733dac6b303866774153725246654c746e6f6f3347436e737346466170724f447753645363674f616a4c6f4b62413dac4e347862563344515a725a2f4c4a335138735368796175635032564a67702f457a73756d722f4a6e776c773df9053eb853f851a0934f1fc004ab44578bb67a28dc60a7b2c1456a9ace0f049d49c80e6a32e829b080808080808080a0e44c574445030e690f39db1bde66164c3ed162119f3d3a89fbf80b0a1e55e53e8080808080808080b90194f9019180a01b5a6c3ba1663a9d926c26525bd5af6f01a683ce86cc5eea866c74d48d12b5b7a06972bc747931f7c2861a86b54b86cc82b312a78f34b7d129238e2a41bad0f600a0154cd2dc1505aa39d816623f1a1d0c89f75dece7893404cc5e0b2d1aa1ee19aea0efccd91cbb07756c8e754b3a46fa9fd9dbead952bf34e413a61a1238f59d2e22a0c5ebc118bf68a84b269acf053efb6f986e03df62e64301a030095000c0542f52a0fa6af3a5cd5a19b4f5d24461d9ea4052c23e5c53536f9989e925224a35d48231a0b6429abd7c1b16888eeae2ae2c53ec63bc6a5cfd0606da5f5b0ddf2195fc97e0a0e3d3e0f89776bb9aa145ffa0f1e5dc39d777d2c9745ea5b121b8c0e979155732a085e86d11a1376c7e25ed78d95eb63a8ee8b82639c16c6aee79292a884658c042a0378c5b5770d066b67f2c9dd0f2c4a1c9ab9c3f6549829fc4cecba6aff267c25ca06416535922d9bcd406243511108208059f1535735b5ee8fff3a99f0939fbd8c0a071085c605c2e76d176d7eb8e99b72d8af248f7e88e53ac1ca232798709a99ca680808080b9034ff9034c20b9034802f903440183113d2dbf90239f89b9449ff00552ca23899ba9f814bcf7ed55bc5cdd9cef863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01a00000000000000000000000004730ddefe385300417cb5617f3adf0105aff6806a00000000000000000000000000000000000000000000000001bc16d674ec80000f89b942a45de58552f2c5e0597d1fbb8ec83f7e2ddba0df863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa00000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01a00000000000000000000000000000000000000000000000001bc16d674ec80000f8fd949adb675bc89d9ec5d829709e85562b7c99658d59f884a065199e8f9cbc273da46a3e57ea48d1ba2ced8379e8f19785847bb3bf1f712dfea00000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000001a0000000000000000000000000dfb41dc2173d2be024e6d64a83fd011d4ae43e01b86000000000000000000000000049ff00552ca23899ba9f814bcf7ed55bc5cdd9ce0000000000000000000000000000000000000000000000001bc16d674ec800000000000000000000000000000000000000000000000000001bc16d674ec80000`

// ProvedReceipt is the struct for proving receipt
type ProvedReceipt struct {
	Receipt *evmtypes.Receipt
	Number  uint64
	Proof   *types.Proof
}

// GetTestHeaders returns the test headers
func GetTestHeaders(t *testing.T) []*types.TinyHeader {
	var headers []*types.TinyHeader
	err := json.Unmarshal([]byte(testHeaders), &headers)
	require.NoError(t, err)

	return headers
}

// GetTestProvedReceipts returns the test proved receipts
func GetTestProvedReceipts(t *testing.T) *ProvedReceipt {
	receipt, err := types.UnmarshalReceipt(common.Hex2Bytes(receiptRLP))
	require.NoError(t, err)

	proof, err := types.UnmarshalProof(common.Hex2Bytes(proofRLP))
	require.NoError(t, err)

	return &ProvedReceipt{
		Receipt: receipt,
		Number:  42768118,
		Proof:   proof,
	}
}
