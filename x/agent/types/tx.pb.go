// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: lorenzo/agent/v1/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgUpdateParams defines a message for add a agent.
type MsgAddAgent struct {
	// agent name,required
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// btc_receiving_address is agentâ€™s fund escrow address,required
	BtcReceivingAddress string `protobuf:"bytes,2,opt,name=btc_receiving_address,json=btcReceivingAddress,proto3" json:"btc_receiving_address,omitempty"`
	// like 0xBAb28FF7659481F1c8516f616A576339936AFB06
	EthAddr string `protobuf:"bytes,3,opt,name=eth_addr,json=ethAddr,proto3" json:"eth_addr,omitempty"`
	// description is a brief description of the agent, optional
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// url is the agent's link, used for detailed introduction, optional
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	// sender is the address of the governance account or module admin
	Sender string `protobuf:"bytes,6,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgAddAgent) Reset()         { *m = MsgAddAgent{} }
func (m *MsgAddAgent) String() string { return proto.CompactTextString(m) }
func (*MsgAddAgent) ProtoMessage()    {}
func (*MsgAddAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6044ef1866821d3, []int{0}
}
func (m *MsgAddAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAgent.Merge(m, src)
}
func (m *MsgAddAgent) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAgent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAgent proto.InternalMessageInfo

func (m *MsgAddAgent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgAddAgent) GetBtcReceivingAddress() string {
	if m != nil {
		return m.BtcReceivingAddress
	}
	return ""
}

func (m *MsgAddAgent) GetEthAddr() string {
	if m != nil {
		return m.EthAddr
	}
	return ""
}

func (m *MsgAddAgent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgAddAgent) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *MsgAddAgent) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgAddAgentResponse is the response to the MsgAddAgent message.
type MsgAddAgentResponse struct {
	// id is the unique identifier of the agent
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgAddAgentResponse) Reset()         { *m = MsgAddAgentResponse{} }
func (m *MsgAddAgentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddAgentResponse) ProtoMessage()    {}
func (*MsgAddAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6044ef1866821d3, []int{1}
}
func (m *MsgAddAgentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddAgentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddAgentResponse.Merge(m, src)
}
func (m *MsgAddAgentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddAgentResponse proto.InternalMessageInfo

func (m *MsgAddAgentResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

// MsgEditAgent defines a message for editting the agent.
type MsgEditAgent struct {
	// id is the unique identifier of the agent
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// agent name,required
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// description is a brief description of the agent, optional
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// url is the agent's link, used for detailed introduction, optional
	Url string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	// sender is the address of the governance account or module admin
	Sender string `protobuf:"bytes,5,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgEditAgent) Reset()         { *m = MsgEditAgent{} }
func (m *MsgEditAgent) String() string { return proto.CompactTextString(m) }
func (*MsgEditAgent) ProtoMessage()    {}
func (*MsgEditAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6044ef1866821d3, []int{2}
}
func (m *MsgEditAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditAgent.Merge(m, src)
}
func (m *MsgEditAgent) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditAgent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditAgent proto.InternalMessageInfo

func (m *MsgEditAgent) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgEditAgent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgEditAgent) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgEditAgent) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *MsgEditAgent) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgEditAgentResponse is the response to the MsgEditAgent message.
type MsgEditAgentResponse struct {
}

func (m *MsgEditAgentResponse) Reset()         { *m = MsgEditAgentResponse{} }
func (m *MsgEditAgentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgEditAgentResponse) ProtoMessage()    {}
func (*MsgEditAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6044ef1866821d3, []int{3}
}
func (m *MsgEditAgentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgEditAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgEditAgentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgEditAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgEditAgentResponse.Merge(m, src)
}
func (m *MsgEditAgentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgEditAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgEditAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgEditAgentResponse proto.InternalMessageInfo

// MsgRemoveAgent defines a message for removing the agent.
type MsgRemoveAgent struct {
	// id is the unique identifier of the agent
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// sender is the address of the governance account or module admin
	Sender string `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
}

func (m *MsgRemoveAgent) Reset()         { *m = MsgRemoveAgent{} }
func (m *MsgRemoveAgent) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAgent) ProtoMessage()    {}
func (*MsgRemoveAgent) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6044ef1866821d3, []int{4}
}
func (m *MsgRemoveAgent) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAgent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAgent.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAgent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAgent.Merge(m, src)
}
func (m *MsgRemoveAgent) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAgent) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAgent.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAgent proto.InternalMessageInfo

func (m *MsgRemoveAgent) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgRemoveAgent) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

// MsgRemoveAgentResponse is the response to the MsgRemoveAgent message.
type MsgRemoveAgentResponse struct {
}

func (m *MsgRemoveAgentResponse) Reset()         { *m = MsgRemoveAgentResponse{} }
func (m *MsgRemoveAgentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveAgentResponse) ProtoMessage()    {}
func (*MsgRemoveAgentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b6044ef1866821d3, []int{5}
}
func (m *MsgRemoveAgentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveAgentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveAgentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveAgentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveAgentResponse.Merge(m, src)
}
func (m *MsgRemoveAgentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveAgentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveAgentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveAgentResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgAddAgent)(nil), "lorenzo.agent.v1.MsgAddAgent")
	proto.RegisterType((*MsgAddAgentResponse)(nil), "lorenzo.agent.v1.MsgAddAgentResponse")
	proto.RegisterType((*MsgEditAgent)(nil), "lorenzo.agent.v1.MsgEditAgent")
	proto.RegisterType((*MsgEditAgentResponse)(nil), "lorenzo.agent.v1.MsgEditAgentResponse")
	proto.RegisterType((*MsgRemoveAgent)(nil), "lorenzo.agent.v1.MsgRemoveAgent")
	proto.RegisterType((*MsgRemoveAgentResponse)(nil), "lorenzo.agent.v1.MsgRemoveAgentResponse")
}

func init() { proto.RegisterFile("lorenzo/agent/v1/tx.proto", fileDescriptor_b6044ef1866821d3) }

var fileDescriptor_b6044ef1866821d3 = []byte{
	// 482 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x93, 0xcd, 0x6a, 0xdb, 0x40,
	0x10, 0xc7, 0x2d, 0xf9, 0xa3, 0xc9, 0xb8, 0x84, 0xb0, 0x49, 0x53, 0x59, 0x50, 0x61, 0x0c, 0x29,
	0x21, 0x10, 0xa9, 0x4e, 0x6f, 0xbd, 0x39, 0xd0, 0x53, 0x6b, 0x08, 0xca, 0xa9, 0xbd, 0x18, 0x5b,
	0x3b, 0xac, 0x17, 0x2c, 0xad, 0xd9, 0xdd, 0x98, 0xb4, 0xa7, 0xd2, 0x07, 0x28, 0x7d, 0x89, 0xde,
	0x73, 0xe8, 0x43, 0xf4, 0x18, 0x7a, 0xea, 0xb1, 0xd8, 0x87, 0xbc, 0x46, 0xd1, 0xea, 0x23, 0xaa,
	0x71, 0x53, 0xc8, 0x4d, 0xb3, 0xbf, 0xff, 0xce, 0xe8, 0x3f, 0xb3, 0x03, 0x9d, 0x99, 0x90, 0x98,
	0x7c, 0x14, 0xc1, 0x98, 0x61, 0xa2, 0x83, 0x45, 0x3f, 0xd0, 0x57, 0xfe, 0x5c, 0x0a, 0x2d, 0xc8,
	0x6e, 0x8e, 0x7c, 0x83, 0xfc, 0x45, 0xdf, 0xed, 0x44, 0x42, 0xc5, 0x42, 0x8d, 0x0c, 0x0f, 0xb2,
	0x20, 0x13, 0xbb, 0x4f, 0xb3, 0x28, 0x88, 0x15, 0x4b, 0x93, 0xc4, 0x8a, 0x65, 0xa0, 0xb7, 0xb2,
	0xa0, 0x3d, 0x54, 0x6c, 0x40, 0xe9, 0x20, 0x4d, 0x43, 0x08, 0x34, 0x92, 0x71, 0x8c, 0x8e, 0xd5,
	0xb5, 0x8e, 0xb6, 0x43, 0xf3, 0x4d, 0x4e, 0xe1, 0xc9, 0x44, 0x47, 0x23, 0x89, 0x11, 0xf2, 0x05,
	0x4f, 0xd8, 0x68, 0x4c, 0xa9, 0x44, 0xa5, 0x1c, 0xdb, 0x88, 0xf6, 0x26, 0x3a, 0x0a, 0x0b, 0x36,
	0xc8, 0x10, 0xe9, 0xc0, 0x16, 0xea, 0xa9, 0x51, 0x3a, 0x75, 0x23, 0x7b, 0x84, 0x7a, 0x9a, 0x52,
	0xd2, 0x85, 0x36, 0x45, 0x15, 0x49, 0x3e, 0xd7, 0x5c, 0x24, 0x4e, 0xc3, 0xd0, 0xea, 0x11, 0xd9,
	0x85, 0xfa, 0xa5, 0x9c, 0x39, 0x4d, 0x43, 0xd2, 0x4f, 0xf2, 0x02, 0x5a, 0x0a, 0x13, 0x8a, 0xd2,
	0x69, 0xa5, 0x87, 0x67, 0xce, 0xcf, 0xef, 0x27, 0xfb, 0xb9, 0xc3, 0xbc, 0xe4, 0x85, 0x96, 0x3c,
	0x61, 0x61, 0xae, 0x7b, 0xd5, 0xfe, 0x7c, 0x7b, 0x7d, 0x9c, 0x07, 0xbd, 0x43, 0xd8, 0xab, 0x98,
	0x0c, 0x51, 0xcd, 0x45, 0xa2, 0x90, 0xec, 0x80, 0xcd, 0xa9, 0xb1, 0xda, 0x08, 0x6d, 0x4e, 0x7b,
	0xdf, 0x2c, 0x78, 0x3c, 0x54, 0xec, 0x35, 0xe5, 0x3a, 0xeb, 0xc6, 0x9a, 0xa0, 0xec, 0x8e, 0x5d,
	0xe9, 0xce, 0x9a, 0x9d, 0xfa, 0x3f, 0xed, 0x34, 0x36, 0xd9, 0x69, 0x3e, 0xc4, 0xce, 0x01, 0xec,
	0x57, 0x7f, 0xb3, 0xf0, 0xd3, 0x1b, 0xc1, 0xce, 0x50, 0xb1, 0x10, 0x63, 0xb1, 0xc0, 0xcd, 0x06,
	0xee, 0x0a, 0xdb, 0x0f, 0x29, 0xec, 0xc0, 0xc1, 0xdf, 0x05, 0x8a, 0xd2, 0xa7, 0x5f, 0x6c, 0xa8,
	0x0f, 0x15, 0x23, 0xe7, 0xb0, 0x55, 0xbe, 0xa5, 0x67, 0xfe, 0xfa, 0x13, 0xf5, 0x2b, 0x53, 0x70,
	0x0f, 0xef, 0xc5, 0xe5, 0x90, 0x2e, 0x60, 0xfb, 0x6e, 0x20, 0xde, 0xc6, 0x3b, 0x25, 0x77, 0x9f,
	0xdf, 0xcf, 0xcb, 0xa4, 0xef, 0xa0, 0x5d, 0x6d, 0x53, 0x77, 0xe3, 0xb5, 0x8a, 0xc2, 0x3d, 0xfa,
	0x9f, 0xa2, 0x48, 0xed, 0x36, 0x3f, 0xdd, 0x5e, 0x1f, 0x5b, 0x67, 0x6f, 0x7e, 0x2c, 0x3d, 0xeb,
	0x66, 0xe9, 0x59, 0xbf, 0x97, 0x9e, 0xf5, 0x75, 0xe5, 0xd5, 0x6e, 0x56, 0x5e, 0xed, 0xd7, 0xca,
	0xab, 0xbd, 0xef, 0x33, 0xae, 0xa7, 0x97, 0x13, 0x3f, 0x12, 0x71, 0xf0, 0x36, 0x4b, 0x7a, 0x72,
	0x9e, 0x2e, 0x63, 0x24, 0x66, 0x41, 0xb1, 0xef, 0x57, 0xf9, 0xc6, 0xeb, 0x0f, 0x73, 0x54, 0x93,
	0x96, 0x59, 0xd6, 0x97, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xff, 0xb7, 0xc6, 0x25, 0x0f, 0x04,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// AddAgent defines a method for adding a agent.
	AddAgent(ctx context.Context, in *MsgAddAgent, opts ...grpc.CallOption) (*MsgAddAgentResponse, error)
	// AddAgent defines a method for editting a agent.
	EditAgent(ctx context.Context, in *MsgEditAgent, opts ...grpc.CallOption) (*MsgEditAgentResponse, error)
	// RemoveAgent defines a method for removing a agent.
	RemoveAgent(ctx context.Context, in *MsgRemoveAgent, opts ...grpc.CallOption) (*MsgRemoveAgentResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) AddAgent(ctx context.Context, in *MsgAddAgent, opts ...grpc.CallOption) (*MsgAddAgentResponse, error) {
	out := new(MsgAddAgentResponse)
	err := c.cc.Invoke(ctx, "/lorenzo.agent.v1.Msg/AddAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) EditAgent(ctx context.Context, in *MsgEditAgent, opts ...grpc.CallOption) (*MsgEditAgentResponse, error) {
	out := new(MsgEditAgentResponse)
	err := c.cc.Invoke(ctx, "/lorenzo.agent.v1.Msg/EditAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveAgent(ctx context.Context, in *MsgRemoveAgent, opts ...grpc.CallOption) (*MsgRemoveAgentResponse, error) {
	out := new(MsgRemoveAgentResponse)
	err := c.cc.Invoke(ctx, "/lorenzo.agent.v1.Msg/RemoveAgent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// AddAgent defines a method for adding a agent.
	AddAgent(context.Context, *MsgAddAgent) (*MsgAddAgentResponse, error)
	// AddAgent defines a method for editting a agent.
	EditAgent(context.Context, *MsgEditAgent) (*MsgEditAgentResponse, error)
	// RemoveAgent defines a method for removing a agent.
	RemoveAgent(context.Context, *MsgRemoveAgent) (*MsgRemoveAgentResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) AddAgent(ctx context.Context, req *MsgAddAgent) (*MsgAddAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddAgent not implemented")
}
func (*UnimplementedMsgServer) EditAgent(ctx context.Context, req *MsgEditAgent) (*MsgEditAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditAgent not implemented")
}
func (*UnimplementedMsgServer) RemoveAgent(ctx context.Context, req *MsgRemoveAgent) (*MsgRemoveAgentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveAgent not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_AddAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lorenzo.agent.v1.Msg/AddAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddAgent(ctx, req.(*MsgAddAgent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_EditAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgEditAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).EditAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lorenzo.agent.v1.Msg/EditAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).EditAgent(ctx, req.(*MsgEditAgent))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveAgent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveAgent)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveAgent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/lorenzo.agent.v1.Msg/RemoveAgent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveAgent(ctx, req.(*MsgRemoveAgent))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "lorenzo.agent.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddAgent",
			Handler:    _Msg_AddAgent_Handler,
		},
		{
			MethodName: "EditAgent",
			Handler:    _Msg_EditAgent_Handler,
		},
		{
			MethodName: "RemoveAgent",
			Handler:    _Msg_RemoveAgent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lorenzo/agent/v1/tx.proto",
}

func (m *MsgAddAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.EthAddr) > 0 {
		i -= len(m.EthAddr)
		copy(dAtA[i:], m.EthAddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.EthAddr)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.BtcReceivingAddress) > 0 {
		i -= len(m.BtcReceivingAddress)
		copy(dAtA[i:], m.BtcReceivingAddress)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BtcReceivingAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddAgentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddAgentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddAgentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgEditAgentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgEditAgentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgEditAgentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAgent) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAgent) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAgent) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sender) > 0 {
		i -= len(m.Sender)
		copy(dAtA[i:], m.Sender)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sender)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveAgentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveAgentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveAgentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgAddAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.BtcReceivingAddress)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.EthAddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddAgentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgEditAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgEditAgentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveAgent) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Sender)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveAgentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgAddAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BtcReceivingAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BtcReceivingAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EthAddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EthAddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddAgentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddAgentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddAgentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgEditAgentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgEditAgentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgEditAgentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAgent) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAgent: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAgent: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sender", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sender = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveAgentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveAgentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveAgentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
