syntax = "proto3";
package lorenzo.convert.v1;

import "cosmos/bank/v1beta1/bank.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/Lorenzo-Protocol/lorenzo/x/convert/types";

// Ownership defines the ownership of an erc20 contract
enum Ownership {
  option (gogoproto.goproto_enum_prefix) = false;
  // undefined owner
  OWNER_UNDEFINED = 0;
  // contract owned by convert module
  OWNER_MODULE = 1;
  // contract owned by external account
  OWNER_EXTERNAL = 2;
}

// TokenPair defines a pairing of a cosmos coin and an erc20 token
message TokenPair {
  option (gogoproto.equal) = true;
  // erc20 contract address
  string contract_address = 1;
  // sdk coin denomination
  string denom = 2;
  // allows for token conversion
  bool enabled = 3;
  // ownership of the contract
  Ownership ownership = 4;
}

// RegisterCoinProposal is a gov Content type to register a token pair for a native Cosmos coin.
message RegisterCoinProposal {
  option (gogoproto.equal) = false;
  // title of the proposal
  string title = 1;
  // description of the proposal
  string description = 2;
  // metadata slice of the native Cosmos coins
  repeated cosmos.bank.v1beta1.Metadata metadata = 3 [(gogoproto.nullable) = false];
}

// RegisterERC20Proposal is a gov Content type to register a token pair for an ERC20 token
message RegisterERC20Proposal {
  option (gogoproto.equal) = false;
  // title of the proposal
  string title = 1;
  // description of the proposal
  string description = 2;
  // contract_addresses is a slice of  ERC20 token contract addresses
  repeated string contract_addresses = 3;
}

// ToggleTokenConversionProposal is a gov Content type to toggle the conversion of a token pair.
message ToggleTokenConversionProposal {
  option (gogoproto.equal) = true;
  // title of the proposal
  string title = 1;
  // description of the proposal
  string description = 2;
  // erc20 contract address or sdk coin denomination
  string token = 3;
}

// ProposalMetadata is a slice of metadata for a proposal
message ProposalMetadata {
  // metadata slice of the native Cosmos coins
  repeated cosmos.bank.v1beta1.Metadata metadata = 1 [(gogoproto.nullable) = false];
}
