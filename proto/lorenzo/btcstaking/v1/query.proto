syntax = "proto3";
package lorenzo.btcstaking.v1;

import "lorenzo/btcstaking/v1/staking_record.proto";
import "lorenzo/btcstaking/v1/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";

option go_package = "github.com/Lorenzo-Protocol/lorenzo/x/btcstaking/types";

service Query {
    rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
        option (google.api.http).get = "/lorenzo/btcstaking/v1/params";
    }
    rpc StakingRecord(QueryStakingRecordRequest) returns (QueryStakingRecordResponse) {
        option (google.api.http).get = "/lorenzo/btcstaking/v1/stakingRecord";
    }

    rpc Records(QueryRecordsRequest) returns (QueryRecordsResponse) {
        option (google.api.http).get = "/lorenzo/btcstaking/v1/records";
    }
}
message QueryParamsRequest {}
message QueryParamsResponse {
    Params params = 1;
}

message StakingRecordDisplay {
    string tx_id = 1;
    string mint_to_address = 2;
    string amount = 3;
    string btc_receiver_name = 4;
    string btc_receiver_addr = 5;
}

message QueryStakingRecordRequest {
    bytes txHash = 1;
}
message QueryStakingRecordResponse {
    BTCStakingRecord record = 1;
}

message QueryRecordsRequest {
    cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryRecordsResponse {
    repeated BTCStakingRecord records = 1;
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message RecordsDisplay {
    repeated StakingRecordDisplay records = 1;
    cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
